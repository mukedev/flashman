<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tech.flashman.dao.UserDao" >
  <resultMap id="BaseResultMap" type="tech.flashman.entity.User" >
    <id column="userId" property="userid" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="brothday" property="brothday" jdbcType="BIGINT" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="rigestTime" property="rigesttime" jdbcType="BIGINT" />
    <result column="modifyTime" property="modifytime" jdbcType="BIGINT" />
    <result column="modifyUser" property="modifyuser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      userId, account, password, userName, brothday, gender, rigestTime, modifyTime, modifyUser
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tech.flashman.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    userId,account,password,userName,brothday,gender,rigestTime,modifyTime,modifyUser
    from user
    where userId = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where userId = #{userid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="tech.flashman.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tech.flashman.entity.User" >
    insert into user (userId, account, password, 
      userName, brothday, gender, 
      rigestTime, modifyTime, modifyUser
      )
    values (#{userid,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{brothday,jdbcType=BIGINT}, #{gender,jdbcType=CHAR}, 
      #{rigesttime,jdbcType=BIGINT}, #{modifytime,jdbcType=BIGINT}, #{modifyuser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="tech.flashman.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="brothday != null" >
        brothday,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="rigesttime != null" >
        rigestTime,
      </if>
      <if test="modifytime != null" >
        modifyTime,
      </if>
      <if test="modifyuser != null" >
        modifyUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="brothday != null" >
        #{brothday,jdbcType=BIGINT},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="rigesttime != null" >
        #{rigesttime,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="modifyuser != null" >
        #{modifyuser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tech.flashman.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.brothday != null" >
        brothday = #{record.brothday,jdbcType=BIGINT},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.rigesttime != null" >
        rigestTime = #{record.rigesttime,jdbcType=BIGINT},
      </if>
      <if test="record.modifytime != null" >
        modifyTime = #{record.modifytime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyuser != null" >
        modifyUser = #{record.modifyuser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set userId = #{record.userid,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      brothday = #{record.brothday,jdbcType=BIGINT},
      gender = #{record.gender,jdbcType=CHAR},
      rigestTime = #{record.rigesttime,jdbcType=BIGINT},
      modifyTime = #{record.modifytime,jdbcType=BIGINT},
      modifyUser = #{record.modifyuser,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tech.flashman.entity.User" >
    update user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="brothday != null" >
        brothday = #{brothday,jdbcType=BIGINT},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="rigesttime != null" >
        rigestTime = #{rigesttime,jdbcType=BIGINT},
      </if>
      <if test="modifytime != null" >
        modifyTime = #{modifytime,jdbcType=BIGINT},
      </if>
      <if test="modifyuser != null" >
        modifyUser = #{modifyuser,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tech.flashman.entity.User" >
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      brothday = #{brothday,jdbcType=BIGINT},
      gender = #{gender,jdbcType=CHAR},
      rigestTime = #{rigesttime,jdbcType=BIGINT},
      modifyTime = #{modifytime,jdbcType=BIGINT},
      modifyUser = #{modifyuser,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=BIGINT}
  </update>
</mapper>